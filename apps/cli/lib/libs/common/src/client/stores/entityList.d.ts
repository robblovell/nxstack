import { BaseServiceStore } from './base';
import { IEntityStore, IEntityListStore, EntityStore } from '../../';
export declare class EntityListStore extends BaseServiceStore implements IEntityListStore {
    entityStoreSymbol: symbol;
    private _entityStores;
    private filterDisposer;
    private lastQuery;
    entities: any;
    filter: any;
    limit: number;
    selectedStore: EntityStore;
    skip: number;
    protected state: 'uninitialized' | 'unfiltered' | 'filtered' | 'error';
    total: number;
    get entityStores(): any[];
    get hasEntities(): boolean;
    get initialized(): boolean;
    get nullState(): boolean;
    get hasMore(): boolean;
    get hasFilter(): boolean;
    constructor(serviceName: string, entityStoreSymbol: symbol);
    init(): void;
    dispose(): void;
    private _preServiceRequest;
    private _postServiceRequest;
    protected findIndex(entity: any): any;
    queryHook(): any;
    getStore(id: any): Promise<IEntityStore>;
    newStore(): IEntityStore;
    reset(): void;
    protected onCreated(entity: any): void;
    protected onUpdated(entity: any): void;
    protected onPatched(patch: any): void;
    protected onDeleted(entity: any): void;
    next(): Promise<void>;
    fetch(force?: boolean): Promise<void>;
    queryHash(query: any): string;
    saveQuery(query: any): void;
    isDifferent(query: any): boolean;
    monitor: () => import("mobx").Lambda;
    filterEntityStores(filter: string): void;
}
