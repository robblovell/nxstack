appId: sample-service                    #App internal name (all lower, no spaces); minimum 5 characters
name: FOO App Display Name         # display name
package: '@provisioner/sample-service'  #the NPM package name.  Typically id and package-name are the same, but not required.
icon: icon.svg                   #see art section for rules for the values here
screenshots:
    - URL to image (PNG JPG, etc..)
    - Raw SVG markup
    - base 64 encoded image
    - could also be a path to a filename within the provisioner package itself   ./logo.svg or ./art/logo.svg
    - 500kb uploaded size. (Web UI)
summary:
    short description of the app
    this is actually markdown
    can reference markdown file in the package itself   ./docs/short.md
description:
    long description of the app
    this is actually markdown
    can reference markdown file in the package itself   ./docs/description.md
category: crm           #taken from our standard set from our UI
video:
    type: youtube
    id: videoId
keywords:
    - folksonomy for tags
    - use a single item in the array for a single tag
    - content                         #for example..
    - content management system       #for example..
provisioner:
  repo: url of source code for the provisioner
  terms:
    url for provisioners license
    this is actually markdown
    can reference markdown file in the package itself   ./docs/license.md
repo: url of source code for the application itself
support:
  url for support for the application itself
  this is actually markdown
  can reference markdown file in the package itself   ./docs/support.md
terms:
  url of terms of service
  full text of the terms of service
  multiple lines are ok
  this is actually markdown
  can reference markdown file in the package itself   ./docs/terms.md
privacy:
  url for the privacy policy
  full text of the privacy policy
  multiple lines are ok
  this is actually markdown
  can reference markdown file in the package itself   ./docs/privacy.md
editions:
  - name: foo
    status: public           #public|private|deprecated   public:everyone, private:org/person only
    spec:                   #https://docs.codezero.io/#/reference/appspec?id=spec-section
      navstation: false     #optional, default: false; When the spec.navstation field is set to true, the application and associated UI panel will appear in the NavStation settings application.
      routes:               #optional. routes which the c6o system will setup in order to route traffic to this instance
        - type: http        #Required. Must be http or tcp. Note that http routing implies and https
          disabled: false   #optional. Default:true; When present and set to true, the route is disabled
          targetService: http-service    #Required. the target service name; typically the name of the NodePort to point our ingress-gateway to
          targetPort: 80    #optional; specifying the target service port, which is needed when multiple service ports are available
          http:             #optional, only used when child props are needed
            prefix: /api  #optional http field specifying matching prefix for a URL rewrite, e.g.: /api/
            rewrite: /api/v1/  #optional http field specifying URL rewrite destination, e.g.: /api/v1/
        - type: tcp
          disabled: false   #optional. Default:true; When present and set to true, the route is disabled
          targetService: tcp-service
          tcp:
            name: tcp-name  #mandatory tcp field specifying the TCP route name. Although arbitrary but must be unique withing an app spec.
            port: 1533      #optional tcp field specifying the incoming TCP port. If not present or set to zero (0) then the port is automatically assigned.
            strictPort: 89  #optional tcp field specifying whether incoming TCP port can be reassigned in case of a port conflict.  Installation will BREAK if the system cannot allocate this port.
      provisioner:          #default values for the provisioner to use, they are all going to be specific to the app, and will NEVER cause a bump in the version needed
        storage: 1Gi
        provisionerPropertyName: defaultValue
        tag-prefix: foo   #prefix to use for provisioner UI web components. When not set, this is the application name
        grantsAwesomeField: #weRock    - specific to the app
                            #these following fields have special meaning
        tag:                #docker image version, special meaning for updates to the docker image itself; @Narayan to clarify; can we pull these out to another section?
        ui: ignore        #optional, default: not specified;  instruct the provisioner Web UI to skip asking for more inputs;
      marina:
        launch:             #Section describing how the application should be launched by the Marina desktop
          type: inline      #inline - launch by browser   @Narayan: Can we add "info" to this, to be explicit?
          popUp: true       #optional -launch in a new tab, default: false - launch in a Marina desktop iFrame
          port: 80          #port to use in the URL, optional; default: 80
          path: /foo      #path to use in the URL, optional; default/not specified: /

  - name: stable            #our second edition in the same app package
    status: public
    spec:                   #as described above.
      routes:
      provisioner:
      marina: